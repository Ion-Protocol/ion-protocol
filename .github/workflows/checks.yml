on: [pull_request, workflow_dispatch]

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  prettify:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        node_version:
          - 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}

      - name: Run Prettier
        run: npx prettier -c '**/*.{md,yml,yaml}'

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Check Solidity formatting with forge fmt
        run: |
          # Stash changes from the checkout step to ignore in the formatting check
          git stash -u

          # Remember the current HEAD commit
          BEFORE_FMT=$(git rev-parse HEAD)

          # Run forge fmt to format Solidity files
          forge fmt

          # Check if there are any changes by comparing the current HEAD to the tree after running forge fmt
          if [ -n "$(git diff $BEFORE_FMT)" ]; then
            echo "Solidity files are not formatted correctly. Please run 'forge fmt' locally and commit the changes."
            git diff $BEFORE_FMT
            exit 1
          else
            echo "All Solidity files are formatted correctly."
          fi

      # Optional: Revert changes made by forge fmt to leave the working directory clean
      - name: Revert formatting changes
        if: failure()
        run: git reset --hard $BEFORE_FMT

  codespell:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run codespell
        uses: codespell-project/actions-codespell@v2.0
        with:
          check_filenames: true
          ignore_words_list: we
          skip: ./.git,./lib,./certora

  validate-links:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        ruby_version:
          - 3.3

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby_version }}
          bundler-cache: true

      - name: Install awesome_bot
        run: gem install awesome_bot

      - name: Validate URLs
        run: awesome_bot ./*.md src/**/*.sol --allow-dupe --allow-redirect --request-delay 0.4 --white-list mainnet.infura.io/v3,localhost

  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        node_version:
          - 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Forge tests
        env:
          MAINNET_RPC_URL: ${{ secrets.MAINNET_RPC_URL }}
          MAINNET_ARCHIVE_RPC_URL: ${{ secrets.MAINNET_ARCHIVE_RPC_URL }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
          MAINNET_ETHERSCAN_URL: ${{ secrets.MAINNET_ETHERSCAN_URL }}
          CHAIN_ID: ${{ secrets.CHAIN_ID }}
          FOUNDRY_PROFILE: ci
        run: |
          curl -fsSL https://bun.sh/install | bash
          export PATH="$HOME/.bun/bin/:$PATH"
          bun install
          forge test -vvv --ffi
        id: t

  solhint:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        node_version:
          - 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run solhint
        run: |
          yarn install
          yarn solhint

  slither:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        node_version:
          - 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          wget https://github.com/ethereum/solidity/releases/download/v0.8.7/solc-static-linux
          chmod +x solc-static-linux
          sudo mv solc-static-linux /usr/local/bin/solc
          pip3 install slither-analyzer
          pip3 inspect

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Slither
        run: |
          slither src

  storage-check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        node_version:
          - 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Install Foundry
        uses: onbjerg/foundry-toolchain@v1
        with:
          version: nightly

      - name: Check storage layout
        uses: Rubilmax/foundry-storage-check@v3.7
        with:
          contract: src/IonPool.sol:IonPool
          address: "0x00000000005a1de4c0eb34609e211ad8831707e0" # the address at which the contract check is deployed
